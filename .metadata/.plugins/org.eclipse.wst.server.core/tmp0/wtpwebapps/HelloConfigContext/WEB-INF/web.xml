<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>HelloConfigContext</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
  
  <!-- Here, I'm defining the Servlet Context Parameter. This is a global object
  		that's shared amongst all Servlets! -->
  <!-- Typically we use this to share some initial params or configuration info across the Whole application -->
  <context-param>
  	<param-name>contextExample</param-name>
  	<param-value>Global Pizza Chains</param-value>
  </context-param>
  
  <servlet>
  
    <servlet-name>FirstServ</servlet-name>
    <servlet-class>com.revature.servlet.FirstServ</servlet-class>
    <!-- ServletConfig is an obj containing initial params or config information created
    		by the servlet container and passed to this particluar servlet during initialization -->
    <init-param>
    	<param-name>configExample</param-name>
    	<param-value>Local pizza chains</param-value>
    </init-param>
    <!-- When the server starts, any servlet with a load-on-startup element with a value of >=0 will be initialized first (init() method is called
    		order is 0 started first, then 1, then 2, etc... -->
    
    <!--  technically pre initalized servlets respond faster when a request is made 
    		this is because they don't have to run the init() method before the doGet()/Post() method
    		the server is going to take longer to start up BECAUSE it has to take extra time to initialize these servlets
    		NEGATIVE numbers mean lazy loading(default behavior)-->
    		
    <load-on-startup>0</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>FirstServ</servlet-name>
    <url-pattern>/first</url-pattern>
  </servlet-mapping>
  
  <servlet>
   
    <servlet-name>SecondServ</servlet-name>
    <servlet-class>com.revature.servlet.SecondServ</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>SecondServ</servlet-name>
    <url-pattern>/second</url-pattern>
  </servlet-mapping>
  
</web-app>